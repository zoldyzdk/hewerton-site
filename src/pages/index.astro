---
import PageLayout from "@/layouts/Base";
import PostPreview from "@/components/blog/PostPreview";
import SocialList from "@/components/SocialList";
import { getAllPosts, sortMDByDate } from "@/utils";
import fetchApi from "src/lib/strapi";
import Article from "src/interfaces/article";

const MAX_POSTS = 10;
const allPosts = await getAllPosts();
const allPostsByDate = sortMDByDate(allPosts).slice(0, MAX_POSTS);

const cactusTech: Array<{ title: string; desc: string; href: string }> = [
	{
		title: "Astro",
		desc: "Build fast websites, faster.",
		href: "https://astro.build",
	},
	{
		title: "Astro Assets",
		desc: "Built-in optimized asset support.",
		href: "https://docs.astro.build/en/guides/assets/",
	},
	{
		title: "Tailwind CSS",
		desc: "Rapidly build modern websites without ever leaving your HTML.",
		href: "https://tailwindcss.com",
	},
	{
		title: "Markdown",
		desc: "Simple and easy-to-use markup language.",
		href: "https://www.markdownguide.org/",
	},
	{
		title: "MDX",
		desc: "Markdown for the component era.",
		href: "https://mdxjs.com/",
	},
	{
		title: "Satori",
		desc: "Generating png Open Graph images for blog posts.",
		href: "https://github.com/vercel/satori",
	},
	{
		title: "Pagefind",
		desc: "A fully static search library.",
		href: "https://pagefind.app/",
	},
	{
		title: "Astro Icon",
		desc: "An easy to use Icon component for Astro.",
		href: "https://github.com/natemoo-re/astro-icon#readme",
	},
];

const isDay = () => {
	const now = new Date();
	const sunrise = new Date();
	sunrise.setHours(6);
	const sunset = new Date();
	sunset.setHours(18);

	return now >= sunrise && now <= sunset;
};

// const articles = await fetchApi<Article[]>({
//   endpoint: 'articles',
//   wrappedByKey: 'data',
// });
const url = "https://blog-strapi-axu3.onrender.com/api/articles"
console.log(url);

const resp = await fetch(url, {
  headers: { Authorization: `Bearer ${import.meta.env.TOKEN}` },
});

const articles = await resp.json();

console.log(articles.data[0].attributes ?? 'nulo');

---

<PageLayout meta={{ title: "Home" }}>
	<section>
		{isDay() ? <h1 class="title mb-6">Bom dia!</h1> : <h1 class="title mb-6">Boa noite!</h1>}
		<p class="mb-4">
			Olá, me chamo Hewerton e sou um desenvolvedor front-end. Atualmente estou trabalhando na
			<a class="cactus-link" rel="noopener" href="https://hat-tree.vercel.app/">DevHat</a>
			 desenvolvendo com tecnologias como React, Typescript e Electron. Também tenho contato com
			algumas tecnologias de back-end tais quais Node.js, Golang, Elixir e também com bancos de
			dados sql.
		</p>
		<SocialList />
	</section>
	<section class="mt-16">
		<h2 class="title mb-4 text-xl">Projetos</h2>
		<ul class="space-y-4 sm:space-y-2">
			{}
		</ul>
	</section>
	<section aria-label="Blog post list" class="mt-16">
		<h2 class="title mb-4 text-xl">Posts</h2>
		<ul class="space-y-4 sm:space-y-2">
			<!-- {
				articles.data.map((p) => (
					<li class="flex flex-col gap-x-2 sm:flex-row">
						<PostPreview post={p.data} />
					</li>
				))
			} -->
        {
          articles.data.map((p) => (
          <li class="flex flex-col gap-x-2 sm:flex-row">
						<p>{p.attributes.title}</p>
            <p>{p.attributes.publishedAt}</p>
					</li>
          ))
        }
		</ul>
	</section>
	<section class="mt-16">
		<h2 class="title mb-4 text-xl">Technologies</h2>
		<ul class="space-y-4 sm:space-y-2">
			{
				cactusTech.map(({ href, title, desc }) => (
					<li>
						<a
							href={href}
							target="_blank"
							rel="noopener noreferrer"
							class="cactus-link inline-block"
						>
							{title}
						</a>
						:<p class="inline-block sm:mt-2">{desc}</p>
					</li>
				))
			}
		</ul>
	</section>
</PageLayout>
